function source_if_present(){
  local file="$1"
  [[ -f $file ]] && source "$file"
}

#Find the absolute path here (without depending on readlink)
pushd $(dirname $0) > /dev/null
CONFIG_BASE="$(pwd)"
popd > /dev/null


# Load Customisations for all shells
source_if_present "$CONFIG_BASE/aliases"
source_if_present "$HOME/.rvm/scripts/rvm"

# Load Shell-specific customisations
if [[ -n $BASH ]] ; then
  source_if_present "$CONFIG_BASE/bash/custom"
elif [[ -n $ZSH_NAME ]] ; then
  source_if_present "$CONFIG_BASE/zsh/custom"
fi

# Add RVM to PATH for scripting
PATH=$PATH:$HOME/.rvm/bin 

# Bind extra keys
## Bind UpArrow and DownArrow to search to autocomplete the current command
bind '"\e[A": history-search-backward'
bind '"\e[B": history-search-forward'

## Bind PgUp and PgDown to scoll through history
bind '"\e[5~": previous-history'
bind '"\e[6~": next-history'

# Configure extra things
## Extra Git config
git config --global alias.meld !~/.bash-config/git-meld.pl
git config --global branch.autosetuprebase always
git config --global color.ui auto
git config --global push.default current

#Tmux Functions
function tmux_create_or_attach(){
  session="$1"
  if [[ ! $(tmux has-session -t "$session" &>/dev/null) ]] ; then
    tmux new -s "$session" -d
  fi
  tmux attach -t "$session"
}

function tmux_new_attach_to_session(){
  session="$1"
  counter=0
  while (tmux has-session -t "${session}_${counter}") ; do
    counter=$[$counter +1]
    echo $counter
  done
  tmux new-session -s "${session}_${counter}" -t "${session}"
}

# Extra Useful Functions
function file_composition {
  find . -type f | perl -n -e'/(\.\w+$)/ && print "$1\n"' | sort | uniq -c | sort -n
}

function git-update {
  local updir=$1
  echo "git pull (in $updir)"
  if pushd $updir >/dev/null ; then
    git pull
    popd >/dev/null
  fi
}

function seconds_to_time_str {
  local secs="$1"
  printf "%dh %dm %ds" $((${secs}/3600)) $((${secs}%3600/60)) $((${secs}%60)) | grep -o "[1-9].*$"
}

function seconds_to_minutes {
  local secs="$1"
  echo "$((${secs}/60))"
}

## Setup Proxy if set in profile.d
source_if_present "/etc/profile.d/proxy"

# Setup iTerm2 tab names
export PROMPT_COMMAND='echo -ne "\\033]0;$(basename ${PWD/#$HOME/~})\\007"'

# Add rbenv loading if needed
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# Git 'g' alias auto-completion fixes
bashdefault -o default -o nospace -F _git g 2>/dev/null || complete -o default -o nospace -F _git g
__git_complete g __git_main

# Force term type to stop all the stupidity in vim, tmux et. al. Not a good idea but fixes too many things not to do it for now.
export TERM=xterm-256color
